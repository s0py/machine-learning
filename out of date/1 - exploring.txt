library(data.table)
library(ggplot2)

data <- fread("data_default.csv")

# get rid of any row with any missing data at all
data <- na.omit(data)
# get rid of the ID column since it's superfluous
data$ID <- NULL
# see what columns we have
colnames(data)

# seeing what the relationship between age and education is
ggplot(data)+
  geom_point(aes(x=jitter(Education, amount = 0.1),  #applying a jitter because many have the exact same value
                 y=Age, 
                 color=as.factor(Default)), 
             alpha=0.4)+
  theme_bw()
ggsave("01 - Age and Education.png")

# seeing what the relationship between age and credit is
ggplot(data)+
  geom_point(aes(x=jitter(Credit, 10), #applying a jitter because many have the exact same value
                 y=Age, 
                 color=as.factor(Default)), 
             alpha=0.4)+
  theme_bw()
ggsave("02 - Age and Credit.png")
# it actually looks like many loans do not go above 500k euros
# there are only a few beyond that
# let's check the histogram to see
hist(data$Credit)
# it seems like a pretty typical decay from low value to high
# i would bet it's zipfian but with a big clustering around 500k euros.


# seeing what the relationship between age and amount 1 is
ggplot(data)+
  geom_point(aes(x=`Amount 1`, 
                 y=Age, 
                 color=as.factor(Default)), 
             alpha=0.4)+
  theme_bw()
ggsave("03 - Age and Amount 1.png")

# seeing what the relationship between amount 1 and amount 2 is
ggplot(data)+
  geom_point(aes(x=`Amount 1`, 
                 y=`Amount 2`, 
                 color=as.factor(Default)), 
             alpha=0.4)+
  theme_bw()
ggsave("04 - Amount 1 and Amount 2.png")

# pretty strong linear relationship in there but with a lot of 0s for either amount


# so far it seems like very little is correlated with the default

# let's see what portion of our data are defaults
d <- dcast(data, Default~., length)
d
6636/(6636+23364)
# 22% are defaults

# let's break it down by sex
d <- dcast(data, Default~Sex, length)
d
# sex 1 is 24% default
2873/(2873+9015)
# sex 23 is 21% default
3763/(3763+14349)
dcast(data, Sex~., length)
18112/(18112+11888)
# about 60% sex 2

# let's look at the default rates by sex and education
d <- dcast(data, Sex+Education~., mean, value.var="Default")
d$. <- round(d$. * 100, digits = 1)
d
# now we see something interesting. default rates are lowest in the 4 and 5 education levels
# and there are 0 defaults when education = 0
dcast(data, Education~., length)
# altho there are only 14 observations for that so maybe we should discard it

# what's the status by age?
dcast(data, Status~., mean, value.var="Age")
# there isn't really a pattern in the average age

# let's see about education
dcast(data, Status~Education, length)
dcast(data, Status~Education, mean, value.var = "Default")
# not really anything that jumps out at me



# let's look at Repayment
dcast(data, `Repayment 1`~., length)
# repayment 1 ranges from -2 to 8 with most being around 8
dcast(data, `Repayment 2`~., length)
# same for repayment 2
dcast(data, `Repayment 3`~., length)
# almost none on 1 which is different
dcast(data, `Repayment 4`~., length)
# same as before. almost one on 1.
dcast(data, `Repayment 5`~., length)
# almost none on 1 again
dcast(data, `Repayment 6`~., length)
# back to what they started with with a concentration around 0
# now to see if there is any trend with Previous
dcast(data, Default~., mean, value.var="Previous 1")
dcast(data, Default~., mean, value.var="Previous 2")
dcast(data, Default~., mean, value.var="Previous 3")
dcast(data, Default~., mean, value.var="Previous 4")
dcast(data, Default~., mean, value.var="Previous 5")
dcast(data, Default~., mean, value.var="Previous 6")
# across the board, the defaults had lower average Previouses
# the averages of each group was really similar across all the Previouses

# idea: maybe remove the categories with very few members


# the coding for "repayment" is categorical but uses numbers
# let's undo that
# Repayment 1-6: Repayment status in January to June (Repayment 6 for June, Repayment
# 5 for May, Repayment 3 for April,...) with the following values: -2=no credit consumption,
# -1=repayed duly, 0=use of revolving credit, 1=payment delay of 1 month, 2=payment delay
# of 2 months, ... , 8=payment delay of 8 months, 9= payment delay of â‰¥ 9 months.

# one idea is to add a variable of how many times someone had any of their
# repayments at -2, -1, or 0.
data$Num_No_Credit_Consumption <- ifelse(data$`Repayment 6`==-2, 1, 0)
data$Num_No_Credit_Consumption <- ifelse(data$`Repayment 5`==-2, data$Num_No_Credit_Consumption+1, data$Num_No_Credit_Consumption)
data$Num_No_Credit_Consumption <- ifelse(data$`Repayment 4`==-2, data$Num_No_Credit_Consumption+1, data$Num_No_Credit_Consumption)
data$Num_No_Credit_Consumption <- ifelse(data$`Repayment 3`==-2, data$Num_No_Credit_Consumption+1, data$Num_No_Credit_Consumption)
data$Num_No_Credit_Consumption <- ifelse(data$`Repayment 2`==-2, data$Num_No_Credit_Consumption+1, data$Num_No_Credit_Consumption)
data$Num_No_Credit_Consumption <- ifelse(data$`Repayment 1`==-2, data$Num_No_Credit_Consumption+1, data$Num_No_Credit_Consumption)
hist(data$Num_No_Credit_Consumption)
# looks like most clients never had a -2

data$Num_Repayed_Duly <- ifelse(data$`Repayment 6`==-1, 1, 0)
data$Num_Repayed_Duly <- ifelse(data$`Repayment 5`==-1, data$Num_Repayed_Duly+1, data$Num_Repayed_Duly)
data$Num_Repayed_Duly <- ifelse(data$`Repayment 4`==-1, data$Num_Repayed_Duly+1, data$Num_Repayed_Duly)
data$Num_Repayed_Duly <- ifelse(data$`Repayment 3`==-1, data$Num_Repayed_Duly+1, data$Num_Repayed_Duly)
data$Num_Repayed_Duly <- ifelse(data$`Repayment 2`==-1, data$Num_Repayed_Duly+1, data$Num_Repayed_Duly)
data$Num_Repayed_Duly <- ifelse(data$`Repayment 1`==-1, data$Num_Repayed_Duly+1, data$Num_Repayed_Duly)
hist(data$Num_Repayed_Duly)
# looks like most clients never had a -1

data$Num_Revolving_Credit <- ifelse(data$`Repayment 6`==0, 1, 0)
data$Num_Revolving_Credit <- ifelse(data$`Repayment 5`==0, data$Num_Revolving_Credit+1, data$Num_Revolving_Credit)
data$Num_Revolving_Credit <- ifelse(data$`Repayment 4`==0, data$Num_Revolving_Credit+1, data$Num_Revolving_Credit)
data$Num_Revolving_Credit <- ifelse(data$`Repayment 3`==0, data$Num_Revolving_Credit+1, data$Num_Revolving_Credit)
data$Num_Revolving_Credit <- ifelse(data$`Repayment 2`==0, data$Num_Revolving_Credit+1, data$Num_Revolving_Credit)
data$Num_Revolving_Credit <- ifelse(data$`Repayment 1`==0, data$Num_Revolving_Credit+1, data$Num_Revolving_Credit)
hist(data$Num_Revolving_Credit)
# this is very different. more people have 6 uses of revolving credit than 0 uses
# and there are high numbers of people with 1 through 5 uses of it.

# we should rename the columns
colnames(data) <- c("Credit", "Is_Male", "Education", "Status", "Age", 
                    "Repayment_Status_Jun",
                    "Repayment_Status_May",
                    "Repayment_Status_Apr",
                    "Repayment_Status_Mar",
                    "Repayment_Status_Feb",
                    "Repayment_Status_Jan",
                    "Account_Balance_Jun",
                    "Account_Balance_May",
                    "Account_Balance_Apr",
                    "Account_Balance_Mar",
                    "Account_Balance_Feb",
                    "Account_Balance_Jan",
                    "Amount_Prev_Repaid_Jun",
                    "Amount_Prev_Repaid_May",
                    "Amount_Prev_Repaid_Apr",
                    "Amount_Prev_Repaid_Mar",
                    "Amount_Prev_Repaid_Feb",
                    "Amount_Prev_Repaid_Jan",
                    "Defaulted",
                    "Num_No_Credit_Consumption",
                    "Num_Repaid_Duly",
                    "Num_Revolving_Credit"
                    )
# let's have a coding of 1 for male and 0 for female for sex
data$Is_Male <- ifelse(data$Is_Male == 2, 0, 1)
# let's look at marital status
dcast(data, Status~., length)
# the coding says that 1 is married, 2 is single, and 3 is something else.
# we should recode anyone with a 0 to be a 3
data$Status <- ifelse(data$Status==0, 3, data$Status)
# and now we should make it strings instead of numbers
data$Status <- ifelse(data$Status==1, "Married", data$Status)
data$Status <- ifelse(data$Status==2, "Single", data$Status)
data$Status <- ifelse(data$Status==3, "Other", data$Status)
